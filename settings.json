{
  "project": {
    "name": "Egg Market Custom Solutions Webapp",
    "description": "Business management platform for egg market operations with document management, sales orders, route planning, and PDF processing",
    "repository": "https://github.com/sergiolopez94/eggmarket-webapp",
    "approach": "phase_based_development"
  },
  "development": {
    "methodology": "Follow PRD-SIMPLIFIED.md for MVP approach",
    "phases": {
      "current_phase": "Phase 0 - Project Setup",
      "phase_0": {
        "weeks": "1-2",
        "focus": "ShipFa.st installation, GitHub setup, Supabase configuration",
        "deliverables": ["ShipFa.st boilerplate setup", "Supabase project", "Basic authentication", "Development environment"]
      },
      "phase_1": {
        "weeks": "3-6",
        "focus": "Core features implementation",
        "deliverables": ["Document management", "Sales order forms", "Inflow API integration", "Route planning interface"]
      },
      "phase_2": {
        "weeks": "7-8",
        "focus": "Polish and deployment",
        "deliverables": ["PDF generation", "Email notifications", "Testing", "Production deployment"]
      },
      "phase_3": {
        "weeks": "9-10",
        "focus": "PDF processing (optional)",
        "deliverables": ["Unstract integration", "PDF upload/processing", "Order extraction"]
      }
    }
  },
  "tech_stack": {
    "framework": "Next.js 14+ with App Router",
    "boilerplate": "ShipFa.st (includes NextAuth, Stripe, Resend, basic components)",
    "database": "Supabase (PostgreSQL with real-time subscriptions)",
    "ui_library": "ShadCN/ui components with Radix UI primitives",
    "styling": "Tailwind CSS",
    "authentication": "NextAuth.js with Google OAuth",
    "deployment": "Vercel (frontend) + Supabase (backend)",
    "drag_drop": "@dnd-kit/core for route planning interface",
    "pdf_processing": "Unstract (self-hosted, future phase)",
    "notifications": "Resend for email notifications"
  },
  "database_schema": {
    "approach": "Simple 8-table structure (not overengineered)",
    "core_tables": [
      "users (id, email, name, company_id)",
      "companies (id, name, inflow_api_key)",
      "documents (id, company_id, name, file_url, expiration_date)",
      "products (id, company_id, name, sku, price, stock_quantity)",
      "orders (id, company_id, customer_name, status, total_amount)",
      "order_items (id, order_id, product_id, quantity, unit_price)",
      "routes (id, company_id, route_date, zone_name)",
      "route_orders (id, route_id, order_id, truck_number, sequence)"
    ]
  },
  "integrations": {
    "inflow_api": {
      "purpose": "Product synchronization and inventory management",
      "endpoints": [
        "GET /products - Product catalog with stock levels",
        "GET /inventory - Real-time inventory levels",
        "POST /orders - Create sales orders (if supported)"
      ],
      "sync_frequency": "Every 15 minutes for critical data",
      "authentication": "API Key per company (encrypted storage)"
    },
    "unstract": {
      "purpose": "PDF processing and data extraction",
      "status": "Future phase - awaiting webhook configuration",
      "implementation": "Phase 3 after core features complete"
    }
  },
  "core_features": {
    "document_management": {
      "upload_documents": "With expiration date tracking",
      "notifications": "Email alerts before expiration",
      "categorization": "Simple folder/tag system"
    },
    "sales_orders": {
      "user_context": "Auto-populate based on logged in user's company",
      "product_selection": "From Inflow synchronized inventory",
      "status_tracking": "Draft -> Pending -> Confirmed -> Shipped -> Delivered"
    },
    "route_planning": {
      "drag_drop_interface": "Assign orders to trucks",
      "lifo_loading": "Last delivery loaded first (reverse sequence)",
      "picking_lists": "PDF generation for warehouse teams",
      "truck_management": "Simple truck numbers and basic capacity"
    }
  },
  "development_principles": {
    "mvp_first": "Build core functionality before advanced features",
    "no_overengineering": "Simple solutions that work",
    "iterative_improvement": "Phase-based development with clear deliverables",
    "user_focused": "Solve real business problems efficiently"
  },
  "file_structure": {
    "docs": ["PRD.md (detailed)", "PRD-SIMPLIFIED.md (focus)", "README.md"],
    "api_reference": "inflow-api/ folder with complete Postman collections",
    "next_structure": "Will follow ShipFa.st conventions: /app, /components, /lib, /models"
  },
  "deployment_strategy": {
    "development": "Local development with Supabase local instance",
    "staging": "Vercel preview deployments",
    "production": "Vercel + Supabase cloud",
    "ci_cd": "GitHub Actions (optional, simple workflow)"
  },
  "success_criteria": {
    "phase_1": "Basic CRUD operations for documents and orders working",
    "phase_2": "Inflow integration + route planning functional",
    "phase_3": "Production deployment with all core features",
    "phase_4": "PDF processing integration (if needed)"
  }
}